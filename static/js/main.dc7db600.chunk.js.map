{"version":3,"sources":["components/theme.js","components/globalStyles.js","components/common/wrapper.js","components/Card.jsx","components/SwitchTheme.jsx","App.js","reportWebVitals.js","index.js"],"names":["darkTheme","background","colorText","colorDisabled","backgroundCard","backgroundButton","backgroundButtonDisabled","typographyTitle","typographyButton","colorCircle","pathColor","trailColor","pathColorBreak","trailColorBreak","lightTheme","GlobalStyles","createGlobalStyle","theme","Wrapper","styled","div","CardContent","CardTitle","h1","CardButton","button","disabled","Progress","CircularProgressbar","isBreak","Card","useState","MINUTES_POMODORO","time","setTime","currentTime","setcurrentTime","isStart","setStart","isPaused","setPaused","setBreak","reanudar","setReanudar","timerRef","useRef","useEffect","window","clearInterval","current","MINUTES_BREAK","minValue","maxValue","value","text","minutes","Math","floor","seconds","minutesString","toString","secondsString","minutesWithZero","padStart","secondsWithZero","convertToMinutes","onClick","setInterval","c","Input","input","attrs","type","id","SwitchBar","SwitchIcon","SwitchTheme","changeTheme","htmlFor","onChange","className","App","setTheme","setMode","localStorage","setItem","mode","getItem","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dc7db600.chunk.js","sourcesContent":["export const darkTheme = {\r\n  background: \"#172030\",\r\n  colorText: \"#ffffff\",\r\n  colorDisabled: \"#444a55\",\r\n  backgroundCard: \"#141C27\",\r\n  backgroundButton: \"#172030\",\r\n  backgroundButtonDisabled: \"hsla(218, 35%, 14%, 0.52)\",\r\n  typographyTitle: \"600 1.5rem/1.75rem Poppins\",\r\n  typographyButton: \"500 1rem/1rem Poppins\",\r\n  colorCircle: \"#E046D733\",\r\n  pathColor: \"#E046D7\",\r\n  trailColor: \"#E046D733\",\r\n  pathColorBreak: \"#3AB499\",\r\n  trailColorBreak: \"#3AB49933\",\r\n};\r\n\r\nexport const lightTheme = {\r\n  background: \"#FCF8E8\",\r\n  colorText: \"#DF7861\",\r\n  backgroundCard: \"#ECDFC8\",\r\n  backgroundButton: \"#FCF8E8\",\r\n  typographyTitle: \"600 1.5rem/1.75rem Poppins\",\r\n  typographyButton: \"500 1rem/1rem Poppins\",\r\n  colorCircle: \"#FCF8E8\",\r\n  pathColor: \"#DF7861\",\r\n  trailColor: \"#FCF8E8\",\r\n  pathColorBreak: \"#698474\",\r\n  trailColorBreak: \"#BAC7A7\",\r\n};\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n\r\nbody{\r\n  margin:0;\r\n  background: ${({ theme }) => theme.background};\r\n  color:${({ theme }) => theme.colorText};\r\n  transition:all 0.50s linear;\r\n  font:${({ theme }) => theme.typographyTitle};\r\n}\r\n\r\nbutton{\r\n  border: none;\r\n}\r\n\r\nh1{\r\n  margin: 0;\r\n}\r\n\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n\r\n  flex-direction: column;\r\n  gap: 2rem;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  width: 100%;\r\n  padding: 0 1rem;\r\n  height: 100vh;\r\n  box-sizing: border-box;\r\n`;\r\n","import { useState, useEffect, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { CircularProgressbar } from \"react-circular-progressbar\";\r\nimport \"react-circular-progressbar/dist/styles.css\";\r\n\r\nconst CardContent = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 24px;\r\n  width: 244px;\r\n  height: 424px;\r\n  background: ${({ theme }) => theme.backgroundCard};\r\n  padding: 3rem 3rem;\r\n  border-radius: 0.5rem;\r\n`;\r\n\r\nconst CardTitle = styled.h1`\r\n  text-align: center;\r\n  color: ${({ theme }) => theme.colorText};\r\n  font: ${({ theme }) => theme.typographyTitle};\r\n`;\r\n\r\nconst CardButton = styled.button`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 1rem;\r\n  color: ${({ theme, disabled }) =>\r\n    disabled ? theme.colorDisabled : theme.colorText};\r\n  font: ${({ theme }) => theme.typographyButton};\r\n  background: ${({ theme, disabled }) =>\r\n    disabled ? theme.backgroundButtonDisabled : theme.backgroundButton};\r\n\r\n  padding: 0.75rem 1rem;\r\n  border-radius: 0.5rem;\r\n  &:hover {\r\n    cursor: ${({ disabled }) => (disabled ? \"not-allowed\" : \"pointer\")};\r\n  }\r\n  &:active {\r\n    transform: scale(0.96);\r\n  }\r\n`;\r\n\r\nconst Progress = styled(CircularProgressbar)`\r\n  .CircularProgressbar-path {\r\n    stroke: ${({ theme, isBreak }) =>\r\n      isBreak ? theme.pathColorBreak : theme.pathColor};\r\n  }\r\n  .CircularProgressbar-trail {\r\n    stroke: ${({ theme, isBreak }) =>\r\n      isBreak ? theme.trailColorBreak : theme.trailColor};\r\n  }\r\n  .CircularProgressbar-text {\r\n    fill: ${({ theme }) => theme.colorText};\r\n  }\r\n  .CircularProgressbar-background {\r\n    fill: green;\r\n  }\r\n`;\r\n\r\nconst Card = () => {\r\n  const MINUTES_POMODORO = 25;\r\n  const MINUTES_BREAK = 5;\r\n\r\n  const TIME_IN_SECONDS_POMODORO = MINUTES_POMODORO * 60;\r\n  const TIME_IN_SECONDS_BREAK = MINUTES_BREAK * 60;\r\n\r\n  const [time, setTime] = useState(TIME_IN_SECONDS_POMODORO);\r\n  const [currentTime, setcurrentTime] = useState(0);\r\n\r\n  const [isStart, setStart] = useState(false);\r\n  const [isPaused, setPaused] = useState(true);\r\n  const [isBreak, setBreak] = useState(false);\r\n\r\n  const [reanudar, setReanudar] = useState(false);\r\n  const timerRef = useRef(0);\r\n\r\n  useEffect(() => {\r\n    if (currentTime === time) {\r\n      window.clearInterval(timerRef.current);\r\n      setcurrentTime(0);\r\n      setStart(!isStart);\r\n      setPaused(!isPaused);\r\n      setReanudar(false);\r\n      setBreak(!isBreak);\r\n\r\n      const newIsBreak = !isBreak;\r\n      setTime(newIsBreak ? TIME_IN_SECONDS_BREAK : TIME_IN_SECONDS_POMODORO);\r\n    }\r\n  });\r\n\r\n  // useEffect(() => {\r\n  //   setTime(isBreak ? TIME_IN_SECONDS_BREAK : TIME_IN_SECONDS_POMODORO);\r\n  // }, [isBreak]);\r\n\r\n  const initTimer = () => {\r\n    timerRef.current = setInterval(() => {\r\n      setcurrentTime((c) => c + 1);\r\n    }, 1000);\r\n  };\r\n\r\n  const startPomodoro = () => {\r\n    setStart(!isStart);\r\n    setPaused(!isPaused);\r\n    initTimer();\r\n  };\r\n\r\n  const pausePomodoro = () => {\r\n    setPaused(!isPaused);\r\n    setStart(!isStart);\r\n    setReanudar(true);\r\n\r\n    window.clearInterval(timerRef.current);\r\n  };\r\n\r\n  const convertToMinutes = () => {\r\n    const minutes = Math.floor((time - currentTime) / 60);\r\n    const seconds = (time - currentTime) % 60;\r\n\r\n    const minutesString = minutes.toString();\r\n    const secondsString = seconds.toString();\r\n\r\n    const minutesWithZero = minutesString.padStart(2, \"0\");\r\n    const secondsWithZero = secondsString.padStart(2, \"0\");\r\n    const minutesAndSeconds = `${minutesWithZero}:${secondsWithZero}`;\r\n\r\n    return minutesAndSeconds;\r\n  };\r\n\r\n  return (\r\n    <CardContent>\r\n      <CardTitle>Pomodoro Tracker</CardTitle>\r\n      <Progress\r\n        minValue={0}\r\n        maxValue={time}\r\n        value={currentTime}\r\n        text={convertToMinutes()}\r\n        isBreak={isBreak}\r\n      />\r\n      <>\r\n        <CardButton onClick={startPomodoro} disabled={isStart}>\r\n          {reanudar ? \"Reanudar\" : \"Start\"} {isBreak ? \"Break\" : \"Pomodoro\"}\r\n        </CardButton>\r\n\r\n        <CardButton onClick={pausePomodoro} disabled={isPaused}>\r\n          Pause {isBreak ? \"Break\" : \"Pomodoro\"}\r\n        </CardButton>\r\n      </>\r\n    </CardContent>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import styled from \"styled-components\";\r\n\r\nconst Input = styled.input.attrs({\r\n  type: \"checkbox\",\r\n  id: \"theme\",\r\n})`\r\n  display: none;\r\n  &:checked ~ .switch__bar {\r\n    background: #334257;\r\n  }\r\n\r\n  &:checked ~ .switch__bar > .switch__icon {\r\n    transform: translate(150%, -50%);\r\n    background: #141c27;\r\n    background-image: url(\"https://raw.githubusercontent.com/DavidMarioLC/practicandoCosas/bb412933fe9e9016e5fca38f177d5fcf6e9d364b/moon.svg\");\r\n    background-repeat: no-repeat;\r\n    background-position: center;\r\n  }\r\n`;\r\n\r\nconst SwitchBar = styled.div`\r\n  width: 60px;\r\n  height: 15px;\r\n\r\n  border-radius: 15px;\r\n  position: relative;\r\n  background: #c8c6c6;\r\n`;\r\n\r\nconst SwitchIcon = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  width: 25px;\r\n  height: 25px;\r\n  border-radius: 50%;\r\n  background: #df7861;\r\n  transform: translate(0%, -50%);\r\n  background-image: url(\"https://raw.githubusercontent.com/DavidMarioLC/practicandoCosas/bb412933fe9e9016e5fca38f177d5fcf6e9d364b/sun.svg\");\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n  transition: all 250ms linear;\r\n`;\r\n\r\nconst SwitchTheme = ({ changeTheme }) => {\r\n  return (\r\n    <label htmlFor=\"theme\">\r\n      <Input onChange={changeTheme} />\r\n      <SwitchBar className=\"switch__bar\">\r\n        <SwitchIcon className=\"switch__icon\" />\r\n      </SwitchBar>\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default SwitchTheme;\r\n","import { useState, useEffect } from \"react\";\nimport { ThemeProvider } from \"styled-components\";\nimport { darkTheme, lightTheme } from \"./components/theme\";\nimport { GlobalStyles } from \"./components/globalStyles\";\nimport { Wrapper } from \"./components/common/wrapper\";\nimport Card from \"./components/Card\";\nimport SwitchTheme from \"./components/SwitchTheme\";\n\nfunction App() {\n  const [theme, setTheme] = useState(\"dark\");\n\n  const setMode = (value) => {\n    window.localStorage.setItem(\"theme\", value);\n    setTheme(value);\n  };\n\n  const changeTheme = () => {\n    theme === \"dark\" ? setMode(\"light\") : setMode(\"dark\");\n  };\n\n  useEffect(() => {\n    const mode = window.localStorage.getItem(\"theme\");\n    setTheme(mode);\n  }, []);\n\n  return (\n    <ThemeProvider theme={theme === \"dark\" ? darkTheme : lightTheme}>\n      <GlobalStyles />\n      <Wrapper>\n        <SwitchTheme changeTheme={changeTheme} />\n        <Card theme={theme} />\n      </Wrapper>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}